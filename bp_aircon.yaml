blueprint:
  name: Klimaanlage Dachgeschoss steuern
  description: >
    Steuert eine Klimaanlage basierend auf Temperatur, Uhrzeit und Energieeinspeisung.
    Aktiv zwischen zwei Uhrzeiten, mit Grenzwerten für Temperatur und Einspeisung.
  domain: automation
  input:
    climate_entity:
      name: Klimaanlage
      selector:
        entity:
          domain: climate
    temperature_sensor:
      name: Temperatursensor
      selector:
        entity:
          domain: sensor
          device_class: temperature
    power_sensor:
      name: Leistungssensor (Wirkleistung)
      selector:
        entity:
          domain: sensor
    min_temp:
      name: Mindesttemperatur (°C)
      default: 20
      selector:
        number:
          min: 10
          max: 35
          step: 0.5
          unit_of_measurement: °C
    min_power:
      name: Mindest-Einspeisung (W)
      default: 500
      selector:
        number:
          min: 0
          max: 10000
          step: 50
          unit_of_measurement: W
    start_time:
      name: Startzeit
      default: "16:00:00"
      selector:
        time:
    end_time:
      name: Endzeit
      default: "19:00:00"
      selector:
        time:

trigger:
  - platform: time_pattern
    minutes: "/30"
  - platform: numeric_state
    entity_id: !input temperature_sensor
    below: !input min_temp
    for:
      minutes: 5

condition: []

variables:
  power_sensor_value: "{{ states(input('power_sensor')) | float(0) }}"
  min_power_value: "{{ input('min_power') | float(0) }}"
  min_temp_value: "{{ input('min_temp') | float(0) }}"

action:
  - choose:
      - conditions:
          - condition: time
            after: !input start_time
            before: !input end_time
          - condition: numeric_state
            entity_id: !input temperature_sensor
            above: !input min_temp
          - condition: template
            value_template: >
              {{ power_sensor_value > min_power_value }}
        sequence:
          - service: climate.set_temperature
            data:
              entity_id: !input climate_entity
              temperature: !input min_temp
              hvac_mode: cool
          - delay:
              seconds: 10
          - service: climate.turn_on
            data:
              entity_id: !input climate_entity
          - delay:
              minutes: 30
          - service: homeassistant.update_entity
            data:
              entity_id: !input temperature_sensor
    default:
      - service: climate.turn_off
        data:
          entity_id: !input climate_entity
      - delay:
          minutes: 30

mode: restart
